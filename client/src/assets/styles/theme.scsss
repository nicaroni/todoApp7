@use "sass:map";
// Define theme styles

 
$themes: (
  "theme-light": (
    back-color: #ffffff,
    container-color:white,
    text-color: #333,
    table-bg: #ffffff,
    text-input:rgb(0, 0, 0),
    table-input: #ff9595,
    
    second-color: rgb(160, 160, 160),
    third-color:white,
    background-color:#1f1f20,
  ),
  "theme-dark": (
    back-color: #313131,
    container-color:rgb(31, 31, 31),
    text-color: #ffffff,
    table-bg: #345fd3,
    text-input:rgb(230, 230, 230),
    table-input: #ff9595,
    
    second-color: rgb(141, 141, 141),
    third-color:white,
    background-color: #1f1f20,
    line-color: #543c8f,
  ),
  "theme-blue": (
    back-color: #f1f9ff,
    container-color:#ceebff,
    text-color: #ffffff,
    table-bg: #ffffff,
    text-input:rgb(46, 46, 46),
    table-input: #ff9595,
    
    second-color: rgb(120, 172, 192),
    third-color:rgb(41, 40, 40),
    background-color: #1f1f20,
    line-color: rgb(255, 255, 255),
  ),
  "theme-green": (
    back-color: #f5fff9,
    container-color:#c5ffdf,
    text-color: #ffffff,
    table-bg: #e4c0d5,
    text-input:rgb(48, 48, 48),
    table-input: #ff9595,
    
    second-color: rgb(92, 177, 137),
    third-color:white,
    background-color: #303031,
    line-color: rgb(255, 255, 255),
  ),
  "theme-purple": (
    back-color: #ffffff,
    container-color:#fce1fd,
    text-color: #fffeff,
    table-bg: #ffffff,
    text-input:hsl(0, 0%, 23%),
    table-input: #f50505,
    
    second-color: hsl(288, 100%, 78%),
    third-color:white,
    background-color: #0000a5,
    line-color: rgb(255, 255, 255),
  ),
);

// Apply styles dynamically
@each $theme, $map in $themes {
  [data-theme="#{$theme}"] {

    
    
    background-color: map.get($map, back-color);
    
    .todo-table{
      background-color: map.get($map, container-color);

      .my-4{
        color: map.get($map, text-color);
        text-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;
      }
    }
    
    .main-todo-table .todo-item-row {
      
      
      .todo-date {
        color: map.get($map, second-color);
      }
      .todo-description span {
        color: map.get($map, text-input);
      }
      // If this element should have both classes, use a dot between them:
   
    }
    .todo-form .table-like-row .todo-input{
      color: map.get($map, text-input);
      
      border-color: #ffffff;
      
    }
    .table {
      --bs-table-bg: map.get($map, table-input);
      .todo-header{
        color:map.get($map, table-bg);
        border-color: #ffffff;
      }
      
      .circle{
        color: map.get($map, second-color);
        border-color:map.get($map, second-color);
      }
     
      .add-todo-btn {
        width: 70px;
        height: 40px;
        margin: 13px;
        border: none;
        outline: none;
        color: #fff;
        background: #111;
        cursor: pointer;
        position: relative;
        z-index: 0;
        border-radius: 10px;
    
        }
      .add-todo-btn:before {
        content: '';
        background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
        position: absolute;
        top: -2px;
        left:-2px;
        background-size: 400%;
        z-index: -1;
        filter: blur(5px);
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        animation: glowing 20s linear infinite;
        opacity: 0;
        transition: opacity .3s ease-in-out;
        border-radius: 10px;
      }
      .add-todo-btn:active {
        color: #000
      }
      .add-todo-btn:active:after  {
        background: transparent;
      }
      .add-todo-btn:hover:before  {
        opacity: 1;

      }
      .add-todo-btn:after  {
        z-index: -1;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        background: #111;
        left: 0;
        top: 0;
        border-radius: 10px;

      }
      @keyframes glowing {
        0% { background-position: 0 0; }
        50% { background-position: 400% 0; }
        100% { background-position: 0 0; }
    }
    }
    
    
    
    .todo-item-row {
      color: map.get($map, text-color);
      border-bottom: map.get($map, line-color);
      .circle{
        color: map.get($map, second-color);
      }
    }
    
    .todo-description {
      padding: 4px;
      padding-left: 10px;
      padding-right: 10px;
      border-radius: 20px;
      color: map.get($map, table-bg);
      background-color: map.get($map, table-bg);
      font-weight: 600;
      
      
    }
   
    // Use the saved table-input variable on #root:
    
  }
  
}

// Style the theme buttons
.theme-page {
  margin-top: 50px;
  margin-left: 30px;
  margin-right: 30px;
  background-color: #f3f3f3;
  box-shadow: rgba(0, 0, 0, 0.07) 0px 1px 1px, rgba(0, 0, 0, 0.07) 0px 2px 2px, rgba(0, 0, 0, 0.07) 0px 4px 4px, rgba(0, 0, 0, 0.07) 0px 8px 8px, rgba(0, 0, 0, 0.01) 0px 16px 19px;
  border-radius: 10px;
  text-align: center;
  padding: 20px;

  .theme-options {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 20px;

    .theme-btn {
      border: none;
      padding: 10px 20px;
      cursor: pointer;
      font-weight: bold;
      border-radius: 5px;
      transition: transform 0.2s ease-in-out;
    }

    .theme-btn.active {
      outline: 3px solid white;
      transform: scale(1.1);
    }
  }
}

.nav-theme{
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: 5px 1;
    position: sticky;
    top: 0;
    z-index: 1001;
    border-radius: 10px;

    .nav-2{
    display: flex;
    align-items: center;
    background-color: white;
    padding: 10px 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 0;
    z-index: 1000;
    border-radius: 10px;
    .nav-2-center{
      text-decoration: none;
      font-weight: 700;
      color: #41c985;
    }

  }
    
      
    }
 
